
@model PVMTrading_v1.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Save", "Customer"))
{
    @Html.AntiForgeryToken()
    <div class="content-wrapper">
        <div class="form-horizontal">

            <div class="card mb-3">
                <div class="card-header">
                    <h4>Customer</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive"></div>
                    <hr/>
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.FirstName, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.MiddleName, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.MiddleName, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.LastName, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.LastName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.LastName, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.NameExtension, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.NameExtension, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.NameExtension, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.Mobile, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.Mobile, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.Mobile, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.Telephone, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.Telephone, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.Telephone, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.Email, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.Email, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.Email, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.Birthdate, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.Birthdate, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.Birthdate, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CivilStatuses, "Civil Status", htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.DropDownListFor(m => m.Customer.CivilStatusId, new SelectList(Model.CivilStatuses, "Id", "Label"), "Civil Status", new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Customer.CivilStatusId, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Sexs, "Sex", htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.DropDownListFor(m => m.Customer.Sexid, new SelectList(Model.Sexs, "Id", "Label"), "Sex", new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Customer.Sexid, "", new {@class = "text-danger"})
                        </div>
                    </div>

                 

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.PlaceOfBirth, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.PlaceOfBirth, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.PlaceOfBirth, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.Nationality, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.Nationality, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.Nationality, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.TaxIdentificationNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.TaxIdentificationNumber, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.TaxIdentificationNumber, "", new {@class = "text-danger"})
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.CustomerType, "Customer Type", new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.DropDownListFor(m => m.Customer.CustomerTypeId, new SelectList(Model.CustomerTypes, "Id", "Label"), "Customer Type", new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Customer.CustomerTypeId, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.LotHouseNumberAndStreet, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.LotHouseNumberAndStreet, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.LotHouseNumberAndStreet, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.Barangay, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.Barangay, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.Barangay, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.CityMunicipality, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.CityMunicipality, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.CityMunicipality, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.Province, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.Province, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.Province, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.Country, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.Country, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.Country, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Customer.ZipCode, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-xs-3">
                            @Html.EditorFor(model => model.Customer.ZipCode, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Customer.ZipCode, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    

                    @Html.HiddenFor(m => m.Customer.Id)
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default"/>
                        </div>
                    </div>
                </div>
                <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
            </div>

        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts 
{
    @Scripts.Render("~/bundles/jqueryval")
}
