@model PVMTrading_v1.ViewModels.CashTransactionViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>


@using (Html.BeginForm("Save", "CashTransaction"))
{
    @Html.AntiForgeryToken()
    <div class="content-wrapper">
        <div class="form-horizontal">


            <h4>CashTransaction</h4>
            <hr />
            <!-- Modal -->
            <div class="modal fade modal-lg" id="myModal" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog">
                    <div class="modal-content">
                        @{
                            Html.RenderAction("SearchProduct", "CashTransaction");
                        }
                    </div>
                </div>
            </div>
            @*
                Modal for search product trigger open modal
            *@
            <div class="form-group">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal"> Search Product</button>
            </div>
            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CashTransaction.CashTransactionDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CashTransaction.CashTransactionDate, new { Value = DateTime.Now, @disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CashTransaction.CashTransactionDate, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <!-- Modal -->
            <div class="modal fade" id="myModalcustomer" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog">
                    <div class="modal-content">
                        @{
                            Html.RenderAction("SearchCustomer", "CashTransaction");
                        }
                    </div>
                </div>
            </div>
         
        
            <div class="form-group">
                @Html.LabelFor(model => model.CashTransaction.CustomerId, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CashTransaction.CustomerId, new { @disabled = "disabled", @readonly = "readonly" })  <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModalcustomer"> Search Product</button>
                    @Html.ValidationMessageFor(model => model.CashTransaction.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CashTransaction.TotalDiscountedAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CashTransaction.TotalDiscountedAmount, new { @disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CashTransaction.TotalDiscountedAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CashTransaction.OriginalTotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CashTransaction.OriginalTotalAmount, new { @disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CashTransaction.OriginalTotalAmount, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.CashTransaction.TotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CashTransaction.TotalAmount, new { @disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CashTransaction.TotalAmount, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.CashTransaction.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CashTransaction.Remarks, new { @disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.CashTransaction.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.CashTransaction.OR, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CashTransaction.OR, new { @class="form-control" })
                    @Html.ValidationMessageFor(model => model.CashTransaction.OR, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>

    </div>
                            }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}







